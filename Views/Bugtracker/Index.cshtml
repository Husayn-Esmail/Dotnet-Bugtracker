@model IEnumerable<bugtracker.Models.Issue>

@{
    ViewData["Title"] = "Index";
    ViewData["styles"] = "~/css/bugtracker-index.css";
}

@* NOTES: View model is a way to do what I want to do in regards to the modal
   so that's a possible solution that's worth looking into.
   However, in the interest of keeping views decoupled it might be best to
   forgo the modal idea and instead keep them as separate pages. Style the
   create page much better and link the create button on index to the create
   page. *@

<script type="module" src="~/js/modal.js"></script>
<h1>Bug Tracker</h1>
<div class="content-container">
    <div class="form-container">
        <form>
            @* opens a modal which will need to link with the bugtracker controller *@
            <button type="button" class="button" data-open="modal1">+</button>
            @* <p class="button"> *@
            @* @Html.ActionLink("+", "Create") *@
            @* @{Html.RenderPartial("Create", "Issue");} *@
            @* </p> *@
            <input type="search" placeholder="search" class="search"></input>
            <input type="submit" class="button">
        </form>
        <form asp-action="Create">
            <div class="modal" id="modal1">
                <div clsas="modal-dialog">
                    <header class="modal-header">
                        <p>Create New Issue</p>
                        <button class="close-modal button" type="button" arial-lable="close modal" data-close>x</button>
                    </header>
                    <section class="modal-content">
                        @* <partial name="~/Views/Bugtracker/Create.cshtml" /> *@
                        @* @await Html.PartialAsync("Create") *@
                        @* @{
                            await Html.RenderPartialAsync("test");
                        } *@
                        @* <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <p class="input-label">Status</p>
                        <input class="field" label="status" asp-for="Issue.Status" type="text" />
                        <p class="input-label">Title</p>
                        <input class="field" label="title" type="text" />
                        <p class="input-label">Description</p>
                        <input class="field" label="description" type="text"/>
                        <p class="input-label">Priority</p>
                        <input class="field" label="priority" type="text" />
                        <p class="input-label">Type</p>
                        <input class="field" label="type" type="text" /> *@
                    </section>
                    <footer class="modal-footer">
                        <button class="button" type="submit">submit</button>
                        @section Scripts {
                            @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
                        }
                    </footer>
                </div>
            </div>
        </form>
    </div>
    @* Issues list *@
    <ul id="issues">
        <li class="issue"><a class="top" href="https://google.com">dummy item</a></li>
        @foreach (var item in Model) {
            <li class="issue">
                <a href="#">
                    <p>
                        @Html.DisplayFor(modelItem => item.Status)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Title)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Priority)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.IssueType)
                    </p>
                </a>
            </li>
        }
        <li class="issue"><a href="#">dummy item3</a></li>
        <li class="issue"><a href="#">dummy item4</a></li>
        <li class="issue"><a class="bottom" href="#">dummy item5</a></li>
    </ul>
</div>

@* <p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IssueType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateTimeCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateTimeModifed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastModifiedBy)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTimeCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTimeModifed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastModifiedBy)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@
